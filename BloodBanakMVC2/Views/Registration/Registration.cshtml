@model BloodBanakMVC2.Context.userRegistration
@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .error{
        color:red;
    }
</style>

<h2>Registration</h2>

@using (Html.BeginForm("AddUser", "Registration", FormMethod.Post))
{
<div class="container">
    <div class="form-group">
        @Html.HiddenFor(x=>x.ID)
        <label>Full Name</label>
        @Html.ValidationMessageFor(x=>x.FullName,"",new {@class="error" })
        @Html.TextBoxFor(x => x.FullName, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Email</label>
        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label>Password</label>
        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.Password, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label>Mobile</label>
        @Html.ValidationMessageFor(x => x.Mobile, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.Mobile, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label>Division</label>
        @Html.ValidationMessageFor(x => x.Division, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.Division, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label>District</label>
        @Html.ValidationMessageFor(x => x.District, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.District, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label>Criterias</label>
        @Html.TextAreaFor(x => x.Criterias, new { @class = "form-control", @rows="10" })
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit</button>
        <button type="reset" class="btn btn-danger">Reset</button>
    </div>
</div>
}

